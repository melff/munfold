[{"path":"https://melff.github.io/munfold/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Elff. Author, maintainer.","code":""},{"path":"https://melff.github.io/munfold/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Elff M (2025). munfold: Metric Unfolding. R package version 0.3.7, https://melff.github.io/munfold/.","code":"@Manual{,   title = {munfold: Metric Unfolding},   author = {Martin Elff},   year = {2025},   note = {R package version 0.3.7},   url = {https://melff.github.io/munfold/}, }"},{"path":[]},{"path":"https://melff.github.io/munfold/index.html","id":"an-r-package-which-provides-schoenemanns-algorithm-for-metric-multidimensional-unfolding-and-procrustes-rotation-of-unfolding-results","dir":"","previous_headings":"","what":"An R package which provides Schoenemann’s algorithm for metric multidimensional unfolding and Procrustes rotation of unfolding results.","title":"Metric Unfolding","text":"Multi-dimensional unfolding procedure recover positions two sets points matrix distances points groups. research work, implemented algorithm metric multi-dimensional unfolding Peter Schönemann published back 1970 Psychometrika. advanced algorithm, however quite robust quick large number points involved. Note algorithm metric unfolding. , input data need interpretable real distances. package contains implementation Schönemann’s algorithm called munfold. now published CRAN. Development occurs GitHub, releases development tree can found. demonstration multidimensional unfolding. left panel shows original configuration, right panel shows reconstructed configuration. Note Schoenemann algorithm leads successful reconstruction circle positions points slightly perturbed.","code":""},{"path":"https://melff.github.io/munfold/reference/metricUnfolding.html","id":null,"dir":"Reference","previous_headings":"","what":"Metric Unfolding — unfold","title":"Metric Unfolding — unfold","text":"unfold computes metric unfolding solution based rectangular matrix, , reconstructs two sets points distances points first set points second set. uapply applies function two point sets reconstructed unfold.","code":""},{"path":"https://melff.github.io/munfold/reference/metricUnfolding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metric Unfolding — unfold","text":"","code":"unfold(x,...)  # S3 method for class 'matrix' unfold(x, ndims=NULL, squared=FALSE, tol=1e-7,           method=c(\"Schoenemann\", \"CG\"), ...)  # S3 method for class 'formula' unfold(x,data=parent.frame(), ...)  # S3 method for class 'unfolding' biplot(x, dimen=c(1,2), type=attr(x,\"biplot_type\"),   xlim, ylim, tpos=c(4,2), tposdim=1,   asp=1, lty=c(1,2), lwd=c(1,1), pch=c(1,3), cex=c(1,1),   col=c(\"black\",\"black\"), contour.col=\"black\", contour.lty=1,   xlab=paste(\"Dimension \",dimen[1]),   ylab=paste(\"Dimension \",dimen[2]),   ...)  # S3 method for class 'unfolding' plot(x, y=NULL ,dimen=1, discrete=attr(x,\"plot_discrete\"),   use.rownames=discrete, xlab=paste(\"Dimension \",dimen), ...)  uapply(x,FUN)"},{"path":"https://melff.github.io/munfold/reference/metricUnfolding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metric Unfolding — unfold","text":"x unfold.matrix: rectangular matrix contains distances   squared distances (argument squared TRUE).     unfold.formula: formula specifies variables     form columns matrix distances.     biplot.unfolding plot.unfolding: object contains unfolding solution. data data frame environment contains variables specified   formula given first argument. ndims optional integer value specifies   dimensionality solution. NULL   dimensionality selected automatically based   singular value decomposition matrix   squared distances. squared logical value; matrix D contain squared distances? tol tolerance value convergence   conjugate gradients method. method method iterative computation   unfolding solution. y dummy argument compatibility default methods, ignored. dimen biplot: two-element integer vector,   plot: single integer value, specifies   dimension(s) unfolding solution plotted. type character vector length less equal 2.   Determines two point sets unfolding   solutions represented biplot.   Valid choices \"points\" respective set points plotted       points biplot. \"lines\" points respective set       connected lines. \"\" points respective set       plotted points connected lines. \"text\" points respective set       represented corresponding row names       , argument tpos present,       points. \"density\" contour lines drawn       two-dimensional kernel density estimate       respective set points.      biplot type       uses function kde2d       library MASS. tpos two-element integer vector; specifies   position text labels relative   points. meaning integer values   see text tposdim integer value; specifies elements tpos   used. Labels points negative positions along coordinate axis   dimen[tposdim] positioned according tpos[1],   labels points positioned according tpos[1]. xlab, ylab, xlim, ylim, asp, lty, lwd, pch, cex, col arguments passed base graphics functions . contour.col, contour.lty colour line type contour lines,   see contour. discrete logical vector lenght 2;   TRUE, respective set points represented   spikes theplot, otherwise set represented   graph kernel density estimate. use.rownames logical; row names used annotation? ... arguments passed optim   case unfold points   case plotting methods. FUN function applied two sets points result unfolding.","code":""},{"path":"https://melff.github.io/munfold/reference/metricUnfolding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metric Unfolding — unfold","text":"unfold first computes unfolding solution according Schoenemanns metric unfolding algorithm uses linear algebra operations. preliminary solution refined minimizing stress using conjugate-gradients method. uapply applies given function two sets points recovered unfolding solution. applies function components B object class \"unfolding\".","code":""},{"path":"https://melff.github.io/munfold/reference/metricUnfolding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metric Unfolding — unfold","text":"unfold returns object class \"unfolding\" components  numeric matrix representing   first set points. row contains coordinate   one point first set. B numeric matrix representing   second set points. row contains coordinate   one point second set. fitted numeric matrix contains     fitted squared distances. stress stress value, denotes \"badness fit\".","code":""},{"path":"https://melff.github.io/munfold/reference/metricUnfolding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metric Unfolding — unfold","text":"","code":"r <- seq(from=0,to=2*pi,length=24) a1 <- cos(r)*4 + 0.00001*rnorm(r) a2 <- sin(r)*4 + 0.00001*rnorm(r) b1 <- c(.5,-.5,-.5,.5)*3 + 5 b2 <- c(.5,.5,-.5,-.5)*3 + 1  D1 <- outer(b1,a1,\"-\") D2 <- outer(b2,a2,\"-\")  Dsq <- D1^2+D2^2   Dsq.uf<-unfold(sqrt(Dsq),squared=FALSE)  oldpar <- par(mfrow=c(1,2)) A <- cbind(a1,a2) B <- cbind(b1,b2)  ltype <- c(rep(1,NROW(A)),rep(2,NROW(A)))  orig <- rbind(A,B) unfolded <- rbind(Dsq.uf$A,Dsq.uf$B)  xlim <- ylim <- range(orig)#*1.5  plot(A,type=\"b\",pch=1,     xlim=xlim,ylim=ylim,     xlab=\"Dimension 1\",ylab=\"Dimension 2\",main=expression(\"Original data\"),asp=1) lines(B,type=\"b\",pch=3,lty=2) abline(h=0,v=0,lty=3)  biplot(Dsq.uf,type=\"b\",     xlim=xlim,ylim=ylim,     main=expression(paste(italic(unfold),\" solution\")),asp=1)    par(oldpar)"},{"path":"https://melff.github.io/munfold/reference/procrustes.html","id":null,"dir":"Reference","previous_headings":"","what":"Procrustes Rotation — procrustes","title":"Procrustes Rotation — procrustes","text":"procrustes performs procrustes rotation, moment unfold solutions.","code":""},{"path":"https://melff.github.io/munfold/reference/procrustes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Procrustes Rotation — procrustes","text":"","code":"procrustes(x, ...)  # S3 method for class 'unfolding' procrustes(x, use=attr(x,\"procrustes_use\"), target, ...)"},{"path":"https://melff.github.io/munfold/reference/procrustes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Procrustes Rotation — procrustes","text":"x object components rotate. , use components x used     criterion rotation. target matrix rotation criterion     brought close possible. ... arguments future methods, currently ignored.","code":""},{"path":"https://melff.github.io/munfold/reference/procrustes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Procrustes Rotation — procrustes","text":"copy x components appropriately rotated.","code":""}]
